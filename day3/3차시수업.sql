
SELECT * FROM MEMBER_TBL_11;


--고객등급별 포인트 합계
SELECT M_POINT FROM MEMBER_TBL_11;


--전체합계
SELECT SUM(M_POINT) FROM MEMBER_TBL_11;


--그룹전의 조회 완성
SELECT M_GRADE, M_POINT FROM MEMBER_TBL_11;


--그룹별 집계
SELECT M_GRADE, SUM(M_POINT)
FROM MEMBER_TBL_11
GROUP BY M_GRADE;


--조건을 필터를 하고 싶을 때
SELECT M_GRADE, SUM(M_POINT)
FROM MEMBER_TBL_11
GROUP BY M_GRADE
HAVING SUM(M_POINT) >= 5000;


--01: VVIP, 02: VIP, 03: BRONZE
SELECT DECODE(M_GRADE,'01','VVIP','02','VIP','03','BRONZE') AS GRADE, SUM(M_POINT) AS TOTAL
FROM MEMBER_TBL_11
GROUP BY M_GRADE
HAVING SUM(M_POINT) >= 5000;


--정렬하기
SELECT DECODE(M_GRADE,'01','VVIP','02','VIP','03','BRONZE') AS GRADE, SUM(M_POINT) AS TOTAL
FROM MEMBER_TBL_11
GROUP BY M_GRADE
HAVING SUM(M_POINT) >= 5000
ORDER BY GRADE;     --1, 2 (조회칼럼순이나 SELECT절의 별칭을 사용할 수 있다)


--교재189
--DECODE를 사용하여 부서별 직급별 인원수구하기
--EMP 테이블 부서별 각 직급별 인원수 구하기

SELECT * FROM EMP;
SELECT ENAME, DEPTNO, JOB FROM EMP;
SELECT DEPTNO, JOB FROM EMP;


-- 직급별 전체 인원 수 구하기
SELECT DEPTNO, JOB FROM EMP;

--CLERK     SALESMAN     MANAGER     PRESIDENT     ANALYST
--  3           4           3            1            1
SELECT JOB, 
DECODE(JOB,'CLERK',1),
DECODE(JOB,'SALESMAN',1),
DECODE(JOB,'MANAGER',1),
DECODE(JOB,'PRESIDENT',1),
DECODE(JOB,'ANALYST',1)
FROM EMP;

SELECT COUNT(JOB), 
COUNT(DECODE(JOB,'CLERK',1)) CLERK,
COUNT(DECODE(JOB,'SALESMAN',1)) SALESMAN,
COUNT(DECODE(JOB,'MANAGER',1)) MANAGER,
COUNT(DECODE(JOB,'PRESIDENT',1)) PRESIDENT,
COUNT(DECODE(JOB,'ANALYST',1)) JOB
FROM EMP;


--부서별 직급별 인원 수 구하기(그룹화하기)
SELECT DEPTNO, 
COUNT(DECODE(JOB,'CLERK',1)) CLERK,
COUNT(DECODE(JOB,'SALESMAN',1)) SALESMAN,
COUNT(DECODE(JOB,'MANAGER',1)) MANAGER,
COUNT(DECODE(JOB,'PRESIDENT',1)) PRESIDENT,
COUNT(DECODE(JOB,'ANALYST',1)) JOB
FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO, 
COUNT(DECODE(JOB,'CLERK',1))||'명' CLERK,
COUNT(DECODE(JOB,'SALESMAN',1))||'명' SALESMAN,
COUNT(DECODE(JOB,'MANAGER',1))||'명' MANAGER,
COUNT(DECODE(JOB,'PRESIDENT',1))||'명' PRESIDENT,
COUNT(DECODE(JOB,'ANALYST',1))||'명' JOB
FROM EMP
GROUP BY DEPTNO;


--부서별 직급별 인원 수 구하기
SELECT * FROM EMP;


--직급별 인원 수 구하기
SELECT DEPTNO, JOB FROM EMP;

SELECT JOB FROM EMP;


-- 
SELECT JOB, DECODE(JOB,'CLERK',1)
FROM EMP;

--
SELECT COUNT(JOB),
COUNT(DECODE(JOB,'CLERK',1))
FROM EMP;

--그룹화되기 전 상태 조회
SELECT DEPTNO, DECODE(JOB,'CLERK',1)
FROM EMP;

--그룹화된 결과(부서별)
SELECT COUNT(JOB), COUNT(DECODE(JOB,'CLERK',1))
FROM EMP
GROUP BY DEPTNO;

SELECT JOB
FROM EMP;


SELECT JOB,
DECODE(JOB, 'CLERK', 1),
DECODE(JOB, 'SALESMAN', 1),
DECODE(JOB, 'MANAGER', 1),
DECODE(JOB, 'PRESIDENT', 1),
DECODE(JOB, 'ANALYST', 1)
FROM EMP;

--직급별 전체개수
SELECT COUNT(JOB),
COUNT(DECODE(JOB, 'CLERK', 1)),
COUNT(DECODE(JOB, 'SALESMAN', 1)),
COUNT(DECODE(JOB, 'MANAGER', 1)),
COUNT(DECODE(JOB, 'PRESIDENT', 1)),
COUNT(DECODE(JOB, 'ANALYST', 1))
FROM EMP;


--
SELECT COUNT(JOB),
COUNT(DECODE(JOB, 'CLERK', 1)),
COUNT(DECODE(JOB, 'SALESMAN', 1)),
COUNT(DECODE(JOB, 'MANAGER', 1)),
COUNT(DECODE(JOB, 'PRESIDENT', 1)),
COUNT(DECODE(JOB, 'ANALYST', 1))
FROM EMP
GROUP BY DEPTNO;



--교재 210페이지 문제
--1. EMP 테이블을 사용하여 급여와 보너스를 합친 금액이 가장 많은 경우, 가장 적은 경우, 평균 금액을 구하세요.
--보너스가 없을 경우는 0으로 게산하고 출력금액은 소수점 첫째 자리까지만 나오게 하세요
SELECT * FROM EMP;

SELECT  MAX(SAL+NVL(COMM,0)) MAX, MIN(SAL+NVL(COMM,0)) MIN,
        TRUNC(AVG(SAL+NVL(COMM,0)),1) AVG
FROM EMP;

SELECT SAL+NVL(COMM,0) , SAL+NVL(COMM,0) , SAL+NVL(COMM,0)
FROM EMP;


--2.STUDENT 테이블의 BIRTHDAY 컬럼을 참조해서 월별로 생일자 수를 출력하세요
SELECT * FROM STUDENT;

SELECT SUBSTR(BIRTHDAY,4,2), DECODE(SUBSTR(BIRTHDAY,4,2),'01','JAN') JAN
FROM STUDENT;

SELECT  
COUNT(*)||'EA' TOTAL ,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'01','.'))||'EA' JAN,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'02','.'))||'EA' FEB,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'03','.'))||'EA' MAR,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'04','.'))||'EA' APR,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'05','.'))||'EA' MAY,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'06','.'))||'EA' JUN,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'07','.'))||'EA' JUL,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'08','.'))||'EA' AUG,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'09','SEP'))||'EA' SEP,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'10','OCT'))||'EA' OCT,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'11','NOV'))||'EA' NOV,
COUNT(DECODE(SUBSTR(BIRTHDAY,4,2),'12','DEC'))||'EA' DEC
FROM STUDENT
ORDER BY BIRTHDAY;

SELECT 
COUNT(DECODE(TO_CHAR(BIRTHDAY,'MM'),'01','.')) JAN
FROM STUDENT;


SELECT COUNT(BIRTHDAY)||'EA' TOTAL, 
COUNT(DECODE(TO_CHAR(BIRTHDAY,'MM'),'01','.'))||'EA' JAN,
COUNT(DECODE(TO_CHAR(BIRTHDAY,'MM'),'02','.'))||'EA' FEB,
COUNT(DECODE(TO_CHAR(BIRTHDAY,'MM'),'03','.'))||'EA' MAR,
COUNT(DECODE(TO_CHAR(BIRTHDAY,'MM'),'04','.'))||'EA' APR,
COUNT(DECODE(TO_CHAR(BIRTHDAY,'MM'),'05','.'))||'EA' MAY,
COUNT(DECODE(TO_CHAR(BIRTHDAY,'MM'),'06','.'))||'EA' JUN,
COUNT(DECODE(TO_CHAR(BIRTHDAY,'MM'),'07','.'))||'EA' JUL
FROM STUDENT;


--3.STUDENT 테이블의 TEL컬럼을 참고하여 지역별 인원수를 출력하세요
--02-GYEONGGI 051-BUSAN 052-ULSAN 053-DAEGU 055-GYEONGNAM
SELECT * FROM STUDENT;

SELECT SUBSTR(TEL,1,INSTR(TEL, ')')-1)
FROM STUDENT;

SELECT SUBSTR(TEL,1,INSTR(TEL, ')')-1)
FROM STUDENT;

SELECT DECODE(SUBSTR(TEL,1,INSTR(TEL,')')-1),'02','SEOUL')
FROM STUDENT;

SELECT COUNT(DECODE(SUBSTR(TEL,1,INSTR(TEL,')')-1),'02','SEOUL')) SEOUL
FROM STUDENT;

SELECT COUNT(TEL) TOTAL,
COUNT(DECODE(SUBSTR(TEL,1,INSTR(TEL,')')-1),'02','.')) SEOUL,
COUNT(DECODE(SUBSTR(TEL,1,INSTR(TEL,')')-1),'031','.')) GYEONGGI,
COUNT(DECODE(SUBSTR(TEL,1,INSTR(TEL,')')-1),'051','.')) BUSAN,
COUNT(DECODE(SUBSTR(TEL,1,INSTR(TEL,')')-1),'052','.')) ULSAN,
COUNT(DECODE(SUBSTR(TEL,1,INSTR(TEL,')')-1),'053','.')) DAEGU,
COUNT(DECODE(SUBSTR(TEL,1,INSTR(TEL,')')-1),'055','.')) GYEONGNAM
FROM STUDENT;